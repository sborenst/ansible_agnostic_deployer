---
- name: Create OpenShift Container Storage
  command: "{{ openshift_cli }} create -f {{ item }}"
  args:
    chdir: "{{ tmp_dir }}"
  with_items:
    - openshift-storage-operator.yml

- name: Waiting for  Create OpenShift Container Storage operator to complete
  shell: |
    set -o pipefail &&  {{ openshift_cli }} get csv -n openshift-storage 
  register: operator_status
  until: "'Succeeded' in operator_status.stdout"
  retries: 60
  delay: 15
  args:
    executable: /bin/bash

- name: create the quay-enterprise project
  command: "{{ openshift_cli }} new-project quay-enterprise"

- name: clone the quay operator project
  ansible.builtin.git:
    repo: 'https://github.com/quay/quay-operator.git'
    dest: "{{ tmp_dir }}/quay-operator"
    version: master

- name: Create openshift quay objects
  command: "{{ openshift_cli }} create -f {{ item }}"
  args:
    chdir: "{{ tmp_dir }}/quay-operator"
  with_items:
    - deploy/quay-operator.catalogsource.yaml

- name: Waiting for quay-operator to complete
  shell: |
    set -o pipefail &&  {{ openshift_cli }} get packagemanifest --all-namespaces | grep quay | wc -l
  register: operator_status
  until: "'3' in operator_status.stdout"
  retries: 60
  delay: 15
  args:
    executable: /bin/bash

- name: Create openshift quay objects
  command: "{{ openshift_cli }} create -f {{ item }}"
  args:
    chdir: "{{ tmp_dir }}/quay-operator"
  with_items:
    - deploy/quay-operator.operatorgroup.yaml
    - deploy/quay-operator.subscription.yaml
  ignore_errors: true

- name: Create NooBaa object in openshift-storage namespace
  command: "{{ openshift_cli }} create -f config/samples/managed.quayregistry.yaml"
  args:
    chdir: "{{ tmp_dir }}/quay-operator"

- name: Waiting for noobaa to complete
  shell: |
    set -o pipefail &&  {{ openshift_cli }} get -n openshift-storage noobaas noobaa | grep noobaa | grep Ready| wc -l
  register: operator_status
  until: "'1' in operator_status.stdout"
  retries: 60
  delay: 15
  args:
    executable: /bin/bash

- name: Create QuayRegistry instance
  command: "{{ openshift_cli }} create -f config/samples/managed.quayregistry.yaml"
  args:
    chdir: "{{ tmp_dir }}/quay-operator"

- name: wait for quay to deploy
  shell:  "{{ openshift_cli }} get pods  -n quay-enterprise | grep skynet-quay-app"
  register: result
  until: result.stdout.find("Running") != -1
  retries: 30
  delay: 10
