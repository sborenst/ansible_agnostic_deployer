---
# Implement your Workload deployment tasks here

- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Setting up num_users for workshop
  debug:
    msg: "Setting up num_users for workshop num_users = {{ num_users }}"

- name: Give access to opentlc-mgr
  shell: |
         oc adm policy add-cluster-role-to-user cluster-admin {{ ocp_username }}

- name: "Create Infra Project"
  include_tasks: create-infra-project.yaml
  loop: "{{infra_projects}}"
  loop_control:
    loop_var: name  
    
- name: Install gogs
  include_tasks: install-gogs.yaml

- name: install global operators
  include_tasks: install-global-operators.yaml

- name: install monitoring
  include_tasks: install-mon.yaml

- name: install jupyterhub
  include_tasks: install-jupyterhub.yaml

- name: Install nexus
  include_tasks: install-nexus.yaml
  
# Install CodeReady Workspaces
- name: see if codeready is installed
  k8s_info:
    api_version: org.eclipse.che/v1
    kind: CheCluster
    name: codeready-workspaces
    namespace: labs-infra
  register: r_codeready_cr

- name: show codeready cr
  debug:
    msg: "existing codeready project: {{ r_codeready_cr }}"

- name: install codeready
  when: r_codeready_cr.resources | list | length == 0
  include_tasks: install-codeready.yaml

- name: install argocd operator
  include_tasks: install-argocd-operator.yaml

- name: Setup users components
  include_tasks: setup-users.yaml

- name: install username distribution
  include_tasks: install-username-distribution.yaml

- name: install guides
  include_tasks: install-guides.yaml
  vars:
    guide: "{{ module_titles[0].name }}"

# Install AMQ Streams
- name: Check if AMQ Streams is installed
  k8s_info:
    api_version: kafka.strimzi.io/v1beta1
    kind: Kafka
    name: amq-streams
    namespace: labs-kafka
  register: r_amqstreams_cr

- name: Install AMQ Streams
  when: r_amqstreams_cr.resources | list | length == 0
  include_tasks: install-amq-streams.yaml

- name: Install DM
  include_tasks: install-dm.yaml
  
- name: Preload images 
  include_tasks: preload-images.yaml

# Each job takes about XXX minutes
- name: Wait for all users jobs to finish
  k8s_info:
    name: "{{user}}-setup"
    namespace: labs-setup
    kind: Job
  register: job_status
  until: job_status | json_query("resources[0].status.succeeded")
  retries: 400
  delay: 2
  loop: "{{users}}"
  loop_control:
    loop_var: user

- name: install argocd
  include_tasks: install-argocd.yaml

# - name: Delete temp project
#   k8s:
#     state: absent
#     kind: Project
#     api_version: project.openshift.io/v1
#     name: "{{item}}"    
#   loop:
#     - labs-setup

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
